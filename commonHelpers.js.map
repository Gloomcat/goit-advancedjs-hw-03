{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox = null;\n\nconst refreshLightbox = () => {\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n  }\n\n  lightbox.refresh();\n};\n\nexport const toggleLoader = loader => {\n  if (loader.classList.contains('hidden')) {\n    loader.classList.remove('hidden');\n  } else {\n    loader.classList.add('hidden');\n  }\n};\n\nexport const showErrorMessage = errorMessage => {\n  console.log(errorMessage);\n  let settings = {\n    titleSize: '16px',\n    titleLineHeight: '24px',\n    titleColor: '#FFF',\n    messageSize: '16px',\n    messageLineHeight: '24px',\n    messageColor: '#FFF',\n    theme: 'dark',\n    position: 'topRight',\n    title: 'Error',\n    iconUrl: '../img/icon-error.svg',\n    backgroundColor: '#EF4040',\n    message: errorMessage,\n  };\n\n  iziToast.show(settings);\n};\n\nexport const fillGallery = (gallery, photosList) => {\n  console.log(photosList);\n  const galleryItems = photosList.map(photo => {\n    return `\n        <div class='gallery-item'>\n            <a href=\"${photo.largeImageURL}\" class=\"gallery-link\">\n                <img src=\"${photo.previewURL}\" alt=\"${photo.tags}\" loading=\"lazy\" width=\"360\" height=\"200\"/>\n            </a>\n            <ul class=\"info\">\n                <li class=\"info-item\">\n                    <p class=\"info-category\">Likes</p>\n                    <p class=>${photo.likes}</p>\n                </li>\n                <li class=\"info-item\">\n                    <p class=\"info-category\">Views</p>\n                    <p class=>${photo.views}</p>\n                </li>\n                <li class=\"info-item\">\n                    <p class=\"info-category\">Comments</p>\n                    <p class=>${photo.comments}</p>\n                </li>\n                <li class=\"info-item\">\n                    <p class=\"info-category\">Downloads</p>\n                    <p class=>${photo.downloads}</p>\n                </li>\n            </ul>\n        </div>\n        `;\n  });\n  gallery.innerHTML = galleryItems.join('\\n');\n  refreshLightbox();\n};\n\nexport const clearGallery = gallery => {\n  gallery.innerHTML = '';\n  refreshLightbox();\n};\n","import { showErrorMessage } from './render-functions';\n\nconst API_KEY = '45271330-704da2140a32d702981ddfad2';\n\nexport const fetchPhotosList = query => {\n  return fetch(\n    `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(query)}`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\n          `Failed to load images, error code: ${response.status}`\n        );\n      }\n\n      return response.json();\n    })\n    .then(data => {\n      if (parseInt(data.totalHits) > 0) {\n        return data.hits;\n      } else {\n        throw new Error(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n      }\n    })\n    .catch(error => {\n      showErrorMessage(error.message);\n    });\n};\n","import { fetchPhotosList } from './js/pixabay-api';\nimport { clearGallery, fillGallery, toggleLoader } from './js/render-functions';\n\nconst gallery = document.querySelector('.gallery');\nconst form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  clearGallery(gallery);\n  toggleLoader(loader);\n\n  const query = form.querySelector('input[name=\"query\"]').value.trim();\n  fetchPhotosList(query).then(photosList => {\n    toggleLoader(loader);\n    if (photosList) {\n      fillGallery(gallery, photosList);\n    }\n  });\n});\n"],"names":["lightbox","refreshLightbox","SimpleLightbox","toggleLoader","loader","showErrorMessage","errorMessage","settings","iziToast","fillGallery","gallery","photosList","galleryItems","photo","clearGallery","API_KEY","fetchPhotosList","query","response","data","error","form","event"],"mappings":"6vBAKA,IAAIA,EAAW,KAEf,MAAMC,EAAkB,IAAM,CACvBD,IACHA,EAAW,IAAIE,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GACpB,CAAK,GAGHF,EAAS,QAAO,CAClB,EAEaG,EAAeC,GAAU,CAChCA,EAAO,UAAU,SAAS,QAAQ,EACpCA,EAAO,UAAU,OAAO,QAAQ,EAEhCA,EAAO,UAAU,IAAI,QAAQ,CAEjC,EAEaC,EAAmBC,GAAgB,CAC9C,QAAQ,IAAIA,CAAY,EACxB,IAAIC,EAAW,CACb,UAAW,OACX,gBAAiB,OACjB,WAAY,OACZ,YAAa,OACb,kBAAmB,OACnB,aAAc,OACd,MAAO,OACP,SAAU,WACV,MAAO,QACP,QAAS,wBACT,gBAAiB,UACjB,QAASD,CACb,EAEEE,EAAS,KAAKD,CAAQ,CACxB,EAEaE,EAAc,CAACC,EAASC,IAAe,CAClD,QAAQ,IAAIA,CAAU,EACtB,MAAMC,EAAeD,EAAW,IAAIE,GAC3B;AAAA;AAAA,uBAEYA,EAAM,aAAa;AAAA,4BACdA,EAAM,UAAU,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKhCA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,gCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,gCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,gCAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,SAK5C,EACDH,EAAQ,UAAYE,EAAa,KAAK;AAAA,CAAI,EAC1CX,GACF,EAEaa,EAAeJ,GAAW,CACrCA,EAAQ,UAAY,GACpBT,GACF,EChFMc,EAAU,qCAEHC,EAAkBC,GACtB,MACL,gCAAgCF,CAAO,MAAM,mBAAmBE,CAAK,CAAC,EACvE,EACE,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,sCAAsCA,EAAS,MAAM,EAC/D,EAGM,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CACZ,GAAI,SAASA,EAAK,SAAS,EAAI,EAC7B,OAAOA,EAAK,KAEZ,MAAM,IAAI,MACR,0EACV,CAEA,CAAK,EACA,MAAMC,GAAS,CACdf,EAAiBe,EAAM,OAAO,CACpC,CAAK,ECzBCV,EAAU,SAAS,cAAc,UAAU,EAC3CW,EAAO,SAAS,cAAc,OAAO,EACrCjB,EAAS,SAAS,cAAc,SAAS,EAE/CiB,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EAEpBR,EAAaJ,CAAO,EACpBP,EAAaC,CAAM,EAEnB,MAAMa,EAAQI,EAAK,cAAc,qBAAqB,EAAE,MAAM,OAC9DL,EAAgBC,CAAK,EAAE,KAAKN,GAAc,CACxCR,EAAaC,CAAM,EACfO,GACFF,EAAYC,EAASC,CAAU,CAErC,CAAG,CACH,CAAC"}